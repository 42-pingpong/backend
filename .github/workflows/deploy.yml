# Dependency Install, Build, Start를 여기서 다합니다.

name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main 

env:
  AWS_REGION: ap-northeast-2                   

jobs:
  deploy:
    permissions:
      id-token: write
      contents: write

    name: Deploy Application
    runs-on: ubuntu-latest
    outputs:
      deploymentId: ${{ steps.create-deployment.outputs.deploymendId }}
    environment: production


    steps:
      # 레포지토리로 이동합니다.
    - name: Checkout
      uses: actions/checkout@v3


      # 환경변수를 설치합니다.
    - name: Install Secret
      env:
        # github repository 안의 ENV_PROD 환경변수 사용
        ENV_PROD: ${{ secrets.ENV_PROD }}
      run: |
        echo "$ENV_PROD"  >> .env.prod

      # nodejs환경기반
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.16.1'

    - name: install Dependency
      run: npm i 

    - name: build server
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: S3 업로드
      run: aws deploy push --application-name 42pingpongbackend --description "upload test server file in s3" --s3-location s3://42pingpongbackend/moim.zip --source .

    - name: Create CodeDeploy Deployment
      id: create-deployment
      run: |
        id=$(aws deploy create-deployment \
        --application-name 42pingpongbackend \
        --deployment-config-name CodeDeployDefault.OneAtATime \
        --output text --deployment-group-name 42pingpongbackend \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=42pingpongbackend,bundleType=zip,key=moim.zip)
        echo "deploymentId=$id" >> $GITHUB_OUTPUT

    - name: Wait for deployment to finish
      run: |
        echo ${{ steps.create-deployment.outputs.deploymentId }}
        aws deploy wait deployment-successful --deployment-id ${{ steps.create-deployment.outputs.deploymentId }}
