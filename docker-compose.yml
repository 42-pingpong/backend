version: '3.1'

services:
  restapis:
    container_name: restapis
    build:
      context: .
      dockerfile: apps/restapis/Dockerfile
    env_file:
      - apps/restapis/.env.dev
    working_dir: /app
    volumes:
      - /app/node_modules
      - .:/app
    ports:
      - '10002:10002'
    depends_on:
      - docdb
      - rdb
    networks:
      - intra
    healthcheck:
      test: ["CMD", "curl", "-f", "http://restapis:10002/api"]
      interval: "5s"
      timeout: "1s"
      retries: 20
      start_period: "10s"

  sockets:
    container_name: sockets
    build:
      context: .
      dockerfile: apps/sockets/Dockerfile
    env_file:
      - apps/sockets/.env.dev
    working_dir: /app
    volumes:
      - /app/node_modules
      - .:/app
    ports:
      - '10001:10001'
    depends_on:
      docdb:
        condition: service_started
      rdb:
        condition: service_started
      restapis:
        condition: service_healthy
    networks:
      - intra

  docdb:
    container_name: docdb
    image: redis:7.0-alpine
    ports:
      - '6379:6379'
    networks:
      - intra

  rdb:
    container_name: rdb
    image: postgres
    ports:
      - '5432:5432' #http://localhost:5555
    environment:
      POSTGRES_USER: 'pingpongdang'
      POSTGRES_PASSWORD: '0000'
      POSTGRES_DB: 'pingpong'
    volumes:
      - '/Users/ddinghwan/data/postgres:/var/lib/postgresql/data'
    networks:
      - intra

networks:
  intra:
    driver: bridge
